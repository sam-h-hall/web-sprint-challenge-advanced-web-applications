{"ast":null,"code":"var _jsxFileName = \"/Users/samhall/Documents/All Things Lambda/Lambda-Sprints/copies/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const {\n    goBack\n  } = useHistory(); // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n\n  useEffect(() => {\n    axiosWithAuth().get(\"/colors\").then(res => {\n      console.log(\"bubble page color fetch data: \", res.data);\n      setColorList(res.data);\n    }).catch(err => console.log(\"bubble page color fetch err: \", err.message));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(ColorList, {\n    colors: colorList,\n    updateColors: setColorList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Bubbles, {\n    colors: colorList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default BubblePage;","map":{"version":3,"sources":["/Users/samhall/Documents/All Things Lambda/Lambda-Sprints/copies/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js"],"names":["React","useState","useEffect","Bubbles","ColorList","axiosWithAuth","useHistory","BubblePage","colorList","setColorList","goBack","get","then","res","console","log","data","catch","err","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAaJ,UAAU,EAA7B,CAFuB,CAGvB;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,aAAa,GACVM,GADH,CACO,SADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,GAAG,CAACG,IAAlD;AACAP,MAAAA,YAAY,CAACI,GAAG,CAACG,IAAL,CAAZ;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IACLJ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,GAAG,CAACC,OAAjD,CAPJ;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAET,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEF,SAAnB;AAA8B,IAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAxBD;;AA0BA,eAAeD,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const { goBack } = useHistory();\n  // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n  useEffect(() => {\n    axiosWithAuth()\n      .get(\"/colors\")\n      .then((res) => {\n        console.log(\"bubble page color fetch data: \", res.data);\n        setColorList(res.data);\n      })\n      .catch((err) =>\n        console.log(\"bubble page color fetch err: \", err.message)\n      );\n  }, []);\n\n  return (\n    <>\n      <button onClick={goBack}>Go Back</button>\n      <ColorList colors={colorList} updateColors={setColorList} />\n      <Bubbles colors={colorList} />\n    </>\n  );\n};\n\nexport default BubblePage;\n"]},"metadata":{},"sourceType":"module"}